name: Publish to Exchange & Deploy to CH2.0 
on: 
  push: 
    branches: [ main ]
  pull_request:
    branches: [ main]
jobs:          
  build: 
    runs-on: ubuntu-latest 
    steps: 
      - name: Checkout this repo 
        uses: actions/checkout@v4 
      - name: Cache dependencies 
        uses: actions/cache@v4
        with: 
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }} 
          restore-keys: ${{ runner.os }}-maven- 
      - name: Set up JDK 1.8 
        uses: actions/setup-java@v4
        with: 
          distribution: "zulu" 
          java-version: 8
      - name: Get Organization ID
        id: get_org_id
        run: |
          RESPONSE=$(curl -s -X GET \
          -H "X-ANYPNT-CLIENT-ID: ${{ secrets.CONNECTED_APP_CLIENT_ID }}" \
          -H "X-ANYPNT-CLIENT-SECRET: ${{ secrets.CONNECTED_APP_CLIENT_SECRET }}" \
          "https://anypoint.mulesoft.com/accounts/api/me")
      
          echo "API Response: $RESPONSE" # Imprime la respuesta para depuración
      
          ORG_ID=$(echo "$RESPONSE" | jq -r '.user.organization.id')
      
          if [[ -z "$ORG_ID" || "$ORG_ID" == "null" ]]; then
            echo "❌ ERROR: No se pudo obtener el Organization ID"
            exit 1
          fi

      - name: Check if version exists in Exchange 
        id: check_version
        run: |
          ASSET_ID="sapi-usuario" # Cambia esto si tu asset tiene otro nombre
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" \
          -H "X-ANYPNT-CLIENT-ID: ${{ secrets.CONNECTED_APP_CLIENT_ID }}" \
          -H "X-ANYPNT-CLIENT-SECRET: ${{ secrets.CONNECTED_APP_CLIENT_SECRET }}" \
          "https://anypoint.mulesoft.com/exchange/api/v2/assets/$ORG_ID/$ASSET_ID/$VERSION")

          if [ "$RESPONSE" -eq 200 ]; then
            echo "EXISTS=true" >> $GITHUB_ENV
          else
            echo "EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Publish to Exchange (if not exists)
        if: env.EXISTS == 'false'
        run: | 
          mvn deploy --settings .maven/settings.xml -DskipMunitTests -Dclient.id="${{ secrets.CONNECTED_APP_CLIENT_ID }}" -Dclient.secret="${{ secrets.CONNECTED_APP_CLIENT_SECRET }}"
      - name: Deploy to CloudHub 2.0 
        run: | 
          mvn deploy --settings .maven/settings.xml -DskipMunitTests -DmuleDeploy -Dclient.id="${{ secrets.CONNECTED_APP_CLIENT_ID }}" -Dclient.secret="${{ secrets.CONNECTED_APP_CLIENT_SECRET }}" 
